// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PHAddressWebApi.Entities;

#nullable disable

namespace PHAddressWebApi.Migrations
{
    [DbContext(typeof(PHAddressDbContext))]
    [Migration("20240717062650_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PHAddressWebApi.Entities.Barangay", b =>
                {
                    b.Property<string>("BrgyCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BrgyCode");

                    b.HasIndex("BrgyCode")
                        .HasDatabaseName("IX_Barangay_BrgyCode");

                    b.HasIndex("CityCode");

                    b.ToTable("Barangays");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.City", b =>
                {
                    b.Property<string>("CityCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegionDesc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CityCode");

                    b.HasIndex("CityCode")
                        .HasDatabaseName("IX_City_CityCode");

                    b.HasIndex("ProvinceCode");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.Province", b =>
                {
                    b.Property<string>("ProvinceCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PsgcCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ProvinceCode");

                    b.HasIndex("ProvinceCode")
                        .HasDatabaseName("IX_Province_ProvinceCode");

                    b.HasIndex("RegionCode");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.Region", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PsgcCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PsgcCode")
                        .HasDatabaseName("IX_Region_PsgcCode");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.Barangay", b =>
                {
                    b.HasOne("PHAddressWebApi.Entities.City", "CityFK")
                        .WithMany("Barangays")
                        .HasForeignKey("CityCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityFK");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.City", b =>
                {
                    b.HasOne("PHAddressWebApi.Entities.Province", "ProvinceFK")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProvinceFK");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.Province", b =>
                {
                    b.HasOne("PHAddressWebApi.Entities.Region", "RegionFk")
                        .WithMany("Provinces")
                        .HasForeignKey("RegionCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegionFk");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.City", b =>
                {
                    b.Navigation("Barangays");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("PHAddressWebApi.Entities.Region", b =>
                {
                    b.Navigation("Provinces");
                });
#pragma warning restore 612, 618
        }
    }
}
